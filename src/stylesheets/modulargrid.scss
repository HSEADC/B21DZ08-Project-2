@media all and (min-width: 1260px) {
body.modularGrid {
  .grid { 
    display: grid;
    grid-template-columns: repeat(24, 1fr); /*fr или fractional unit это часть свободного пространства, соответственно 1fr равен одной части от всего оставшегося свободно пространства, т.е это заданное значение ширины.*/
    grid-column-gap: 12px;
    grid-row-gap: 12px; /*отступы между row рядами*/
    width: 1140px;
    margin: 0 auto 12px; /*это Gutter*/

    /*нечетные*/
    &:nth-child(odd) {
      background: lightgray;

      .postTeaser {


        /*это псевдо класс чайлд*/
        /*nth - энный ребенок, можем задать номер*/
        &:nth-child(1) {
          grid-column: 1 / 17; /*с какой по какую колонку стоит div*/

        }

        /*псевдо класс второго элемента*/
        &:nth-child(2) {
          grid-column: 17 / 25; /*задавать по несуществующую колонку*/

        }
      }
    }

    /*четные*/
    &:nth-child(even) {
      background: lightblue;

      .postTeaser {


        /*это псевдо класс чайлд*/
        /*nth - энный ребенок, можем задать номер*/
        &:nth-child(1) {
          grid-column: 1 / 9; /*с какой по какую колонку стоит div*/

        }

        /*псевдо класс второго элемента*/
        &:nth-child(2) {
          grid-column: 9 / 25; /*задавать по несуществующую колонку*/

        }
      }
    }

    .postTeaser {
      height: 450px;
      background: pink;


      /*это псевдо класс чайлд*/
      /*nth - энный ребенок, можем задать номер*/
      &:nth-child(1),
      &:nth-child(2) {
        grid-row: 1 / 2; /*позиция на полосках*/
      }


      &:nth-child(3) {
        grid-column: 1 / 13; /*задавать по несуществующую колонку*/
        grid-row: 2 / 2; /*позиция на полосках*/
      }

      &:nth-child(4) {
        grid-column: 13 / 25; /*задавать по несуществующую колонку*/
        grid-row: 2 / 2; /*позиция на полосках*/
      }

      &:nth-child(5) {
        grid-column: 1 / 9; /*задавать по несуществующую колонку*/
        grid-row: 3 / 4; /*позиция на полосках*/
      }

      &:nth-child(6) {
        grid-column: 9 / 17; /*задавать по несуществующую колонку*/
        grid-row: 3 / 4; /*позиция на полосках*/
      }

      &:nth-child(7) {
        grid-column: 17 / 25; /*задавать по несуществующую колонку*/
        grid-row: 3 / 4; /*позиция на полосках*/
      }
    }
  }
}
}

@media all and (min-width: 768px) and (max-width: 1259px) {
  body.modularGrid {
    .grid {
      grid-template-columns: repeat(16, 1fr); /*fr или fractional unit это часть свободного пространства, соответственно 1fr равен одной части от всего оставшегося свободно пространства, т.е это заданное значение ширины.*/
      width: 756px;

      /*нечетные*/
      &:nth-child(odd) {
        background: lightgray;

        .postTeaser {
          &:nth-child(1) {
            grid-column: 1 / 17;
            grid-row: 1 / 2;
          }

          &:nth-child(2) {
            grid-column: 1 / 9;
            grid-row: 2 / 3;
          }
          &:nth-child(3) {
            grid-column: 9 / 17; /*задавать по несуществующую колонку*/
            grid-row: 2 / 3; /*позиция на полосках*/
          }

          &:nth-child(4) {
            grid-column: 1 / 17; /*задавать по несуществующую колонку*/
            grid-row: 3 / 4; /*позиция на полосках*/
          }

          &:nth-child(5) {
            grid-column: 1 / 9; /*задавать по несуществующую колонку*/
            grid-row: 4 / 5; /*позиция на полосках*/
          }

          &:nth-child(6) {
            grid-column: 9 / 17; /*задавать по несуществующую колонку*/
            grid-row: 4 / 5; /*позиция на полосках*/
          }

          &:nth-child(7) {
            grid-column: 1 / 17; /*задавать по несуществующую колонку*/
            grid-row: 5 / 6; /*позиция на полосках*/
          }
        }
      }

      /*четные*/
      &:nth-child(even) {
        background: lightblue;

        .postTeaser {
          &:nth-child(1) {
            grid-column: 1 / 9; /*с какой по какую колонку стоит div*/
            grid-row: 1 / 2;
          }

          /*псевдо класс второго элемента*/
          &:nth-child(2) {
            grid-column: 9 / 17; /*задавать по несуществующую колонку*/
            grid-row: 1 / 2;
          }
          &:nth-child(3) {
            grid-column: 1 / 17; /*задавать по несуществующую колонку*/
            grid-row: 2 / 3; /*позиция на полосках*/
          }

          &:nth-child(4) {
            grid-column: 1 / 9; /*задавать по несуществующую колонку*/
            grid-row: 3 / 4; /*позиция на полосках*/
          }

          &:nth-child(5) {
            grid-column: 9 / 17; /*задавать по несуществующую колонку*/
            grid-row: 3 / 4; /*позиция на полосках*/
          }

          &:nth-child(6) {
            grid-column: 1 / 9; /*задавать по несуществующую колонку*/
            grid-row: 4 / 5; /*позиция на полосках*/
          }

          &:nth-child(7) {
            grid-column: 9 / 17; /*задавать по несуществующую колонку*/
            grid-row: 4 / 5; /*позиция на полосках*/
          }
        }
      }

      .postTeaser {
        height: 450px;
        background: pink;
      }
    }
  }
}
@media all and (max-width: 767px) {
  body.modularGrid {
    .grid {
      width: 86.25vw;
      margin: 0 auto 12px;
      background: lightgray;

      .postTeaser {
        width: 86.25vw;
        height: 118.75vw;
        margin-bottom: 12px;
        background: pink;
      }
    }
  }
}
